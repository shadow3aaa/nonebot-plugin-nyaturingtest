[project]
name = "nonebot-plugin-template"
version = "0.1.0"
description = "插件描述"
readme = "README.md"
authors = [{ name = "owner", email = "owner@gmail.com" }]
urls = { Repository = "https://github.com/owner/nonebot-plugin-template" }
requires-python = ">=3.10,<3.13"
dependencies = [
  "nonebot2>=2.4.2,<3.0.0",

  "nonebot-plugin-localstore>=0.7.4,<1.0.0",  # 若不需要存储文件应删除
  "nonebot-plugin-apscheduler>=0.5.0,<1.0.0", # 若不使用定时任务应删除
  "nonebot-plugin-waiter>=0.8.1,<1.0.0",      # 若不使用增强版的 got-reject 会话控制应删除

  "nonebot-plugin-uninfo>=0.7.3,<1.0.0",   # 若不使用多平台用户信息获取插件应删除
  "nonebot-plugin-alconna>=0.57.2,<1.0.0", # 若不使用 alconna 跨平台命令解析拓展应删除
  # "nonebot-adapter-onebot>=2.4.6,<3.0.0", # 仅 onebot 应取消注释

  "httpx>=0.27.0,<1.0.0",
]

[dependency-groups]
dev = [
  "nonebot2[fastapi]>=2.4.2,<3.0.0",
  "ruff>=0.11.6,<1.0.0",
  # "nonemoji>=0.1.4,<1.0.0", # 推荐全局安装 pipx install nonemoji
  # "pre-commit>=4.1.0",      # 推荐全局安装 pipx install pre-commit
]

test = [
  "nonebot2[fastapi]>=2.4.2,<3.0.0",
  "nonebot-adapter-onebot>=2.4.6,<3.0.0",
  "nonebug>=0.3.7,<1.0.0",
  "pytest-xdist>=3.6.1,<4.0.0",
  "pytest-asyncio>=0.26.0,<1.0.0",
]

[tool.nonebot]
plugin-dirs = ["src"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
pythonpath = ["src"]
addopts = [
  "-v",               # 详细输出
  "-s",               # 显示打印信息
  "--tb=short",       # 简短的错误回溯
  "-ra",              # 显示所有测试结果摘要
  "--strict-markers", # 严格标记模式
  # "--doctest-modules", # 运行文档测试
  "--import-mode=prepend", # 导入模式
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "W191",   # indentation contains tabs
  "TID252", # relative import
]


[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.pyright]
pythonVersion = "3.10"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
executionEnvironments = [
    { root = "./tests", extraPaths = ["./src"] },
    { root = "./src" },
]
typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true
